 /*
 * -------------------------------------------------
 *  Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the conf folder and imported under a profile
 * name here.
 */

manifest {
  homePage = 'https://github.com/inab/openebench_gmi'
  description = 'This is a project for outbreak detection challenge using OpenEBench platform'
  mainScript = 'main.nf'
  version = '1.0.1'
  nextflowVersion = '>=0.27.6'
}

// Global default params, used in configs

params {
  ver = manifest.version //Pipeline version
  nf_required_version = '0.27.6' //Minimum version of Nextflow required

  input="$baseDir/datasets/testResultDataset/test.tre"
  goldstandard_dir="$baseDir/datasets/goldenDataset/"
  public_ref_dir="$baseDir/datasets/inputIDs/"
  assess_dir="$baseDir/datasets/benchmark_data/"
  challenges_ids = "gmi"
  participant_id = "ISCIII_TOOL"
  statsdir='nf-stats'
  outdir='results'
  otherdir='other-results'

}

profiles {

  standard {
        params {
      // Defaults only, expecting to be overwritten
      max_memory = 32.GB
      max_cpus = 8
      max_time = 240.h
    }

    process{
      errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
      maxRetries = 1
      maxErrors = '-1'
    }
  }

  docker {
    docker.enabled = true
  }

  singularity {
        enabled = true
  }

  hpc_isciii {
        // TODO. with modules.
  }

  testing {
        // TODO
  }

  aws {
        // TO DO
  }

  none {
    // Don't load any config (for use with custom home configs)
  }

}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// By default output execution reports
timeline {
  enabled = true
  file = "${params.statsdir}/timeline.html"
}
report {
  enabled = true
  file = "${params.statsdir}/report.html"
}
trace {
  enabled = true
  file = "${params.statsdir}/trace.txt"
}
dag {
  enabled = true
  file = "${params.statsdir}/DAG.svg"
}
